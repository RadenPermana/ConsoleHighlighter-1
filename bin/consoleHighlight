#!/usr/bin/env node

var fs = require('fs'), 
    path = require('path'),
    showUsage = false,
    source, ch, extension, code, types, lines,

    BASE = path.resolve(path.join(path.dirname(__filename), '..'));

// Load the console highlighter package
ch = require(BASE);

// Determine file to use
if (process.argv.length > 2) {
  try {
    source = path.resolve(process.argv[2]);
    extension = path.extname(source).substring(1);
    code = fs.readFileSync(source, 'utf8').toString();

    if (process.argv.length > 3) {
      extension = process.argv[3];
    }
  }
  catch (e) {
    showUsage = true;
  }
}
else {
  showUsage = true;
}

if (showUsage) {
  var lines = ['Known types: '], lineNo = 0, i, comma;

  console.log('Usage: %s <file> [type]', path.basename(process.argv[1]));
  console.log('  <file> - path to the file to highlight');
  console.log('  [type] - alternate file extension (without period)');
  console.log('           in order to override detected brush highlighter');
  
  types = ch.BrushManager.getKnownTypes();
  for (i = 0; i < types.length; i++) {
    comma = (i === types.length - 1) ? '' : ', ';
    if ((lines[lineNo].length + types[i].length + comma.length) < 60) {
      lines[lineNo] += types[i] + comma;
    } 
    else {
      lineNo++;
      lines[lineNo] = '  ';
    }
  }

  console.log('\n%s', lines.join('\n'));
  process.exit(0);
}

// Load brush and execute highlighter
if (code && extension) {  
  console.log(ch.highlight(code, extension));
}
else {
  console.log('Unable to determine highlighter for %s.', source);
}
